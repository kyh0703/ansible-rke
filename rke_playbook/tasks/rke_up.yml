---
- name: RKE Known hosts
  include: ./known_hosts.yml
  delegate_to: rke_master1

- name: Generate an OpenSSH keypair
  openssh_keypair:
    path: $HOME/.ssh/id_rsa
    owner: "{{ rke_user }}"
    group: "{{ rke_user }}"
    size: 2048
  delegate_to: rke_master1
  run_once: true

- name: Get id_rsa.pub From RKE Home directory
  command: "cat $HOME/.ssh/id_rsa.pub"
  register: id_pub
  delegate_to: rke_master1
  run_once: true

- name: Add ansible-node authorized keys
  lineinfile:
    dest: $HOME/.ssh/authorized_keys
    line: "{{ id_pub.stdout }}"

- name: Copy python code
  copy:
    src: "{{ item }}"
    dest: "$HOME"
  with_items:
    - "cluster.yml"
    - "rke_cluster.py"
  delegate_to: rke_master1
  run_once: true

- name: Make cluster.yaml
  shell: |
    python3 rke_cluster.py \
      --host {{ hostvars[item]['ansible_facts']['hostname'] }} \
      --address {{ hostvars[item]['ansible_facts']['default_ipv4']['address'] }} \
      --role {{ item }}
  loop: "{{ ansible_play_hosts }}"
  args:
    chdir: $HOME
  delegate_to: rke_master1
  run_once: true

- name: Command rke up
  shell: "/usr/local/bin/rke up --config cluster.yml"
  args:
    chdir: $HOME
  delegate_to: rke_master1
  run_once: true

- name: Create .kube directory authorize
  file:
    path: $HOME/.kube
    state: directory
    mode: "0700"

- name: Create .kube config
  file:
    path: $HOME/.kube/config
    state: touch
    mode: "0600"

- name: Copy kubeconfig
  shell: "cp kube_config_cluster.yml .kube/config"
  args:
    chdir: $HOME
  delegate_to: rke_master1
  run_once: true

- name: Add a line Kubectl Alias
  ansible.builtin.lineinfile:
    path: $HOME/.bashrc
    line: "{{ item }}"
  with_items:
    - alias k=kubectl
    - complete -F __start_kubectl k

- name: Source Bashrc
  shell: source $HOME/.bashrc

- name: Delete python code
  ansible.builtin.file:
    path: "$HOME/rke_cluster.py"
    state: absent
  delegate_to: rke_master1
  run_once: true
