---
- name: Copy source code
  copy:
    src: "{{ item }}"
    dest: "$HOME"
  with_items:
    - "cluster.yml"
    - "rke_cluster.py"

- name: Make cluster yaml
  shell: |
    python3 rke_cluster.py \
      --host {{ hostvars[item]['ansible_facts']['hostname'] }} \
      --address {{ hostvars[item]['ansible_facts']['default_ipv4']['address'] }} \
      --role {{ item }}
  loop: "{{ ansible_play_hosts }}"
  args:
    chdir: $HOME

- name: RKE Up
  shell: "/usr/local/bin/rke up --config $HOME/cluster.yml"
  args:
    chdir: $HOME

- name: Create .kube directory authorize
  file:
    path: $HOME/.kube
    state: directory
    mode: "0700"

- name: Create .kube config
  file:
    path: $HOME/.kube/config
    state: touch
    mode: "0600"

- name: Set Default kubeconfig
  shell: "cp $HOME/kube_config_cluster.yml $HOME/.kube/config"

- name: Add a line Kubectl Alias
  ansible.builtin.lineinfile:
    path: $HOME/.bashrc
    line: "{{ item }}"
  with_items:
    - alias k=kubectl
    - complete -F __start_kubectl k

- name: Source Bashrc
  shell: source $HOME/.bashrc

- name: Wait for all control-plane pods become created
  shell: |
    /usr/local/bin/kubectl get po \
      --namespace=kube-system \
      --selector k8s-app \
      --output=jsonpath='{.items[*].metadata.name}'
  register: control_plane_pods_created
  until: "item in control_plane_pods_created.stdout"
  retries: 10
  delay: 30
  with_items:
    - calico
    - canal
    - coredns-autoscaler
    - metrics-server

- name: Wait for control-plane pods become ready
  shell: |
    /usr/local/bin/kubectl wait \
      --namespace=kube-system \
      --selector k8s-app \
      --for=condition=Ready pods \
      --timeout=600s
  register: control_plane_pods_ready

- name: Wait for ingress nginx pods become created
  shell: |
    /usr/local/bin/kubectl get po \
      --namespace=ingress-nginx \
      --selector app=ingress-nginx \
      --output=jsonpath='{.items[*].metadata.name}'
  register: ingress_controller_pods_created
  until: "item in ingress_controller_pods_created.stdout"
  retries: 10
  delay: 30
  with_items:
    - nginx-ingress-controller

- name: Wait for ingress nginx controller pods become ready
  shell: |
    /usr/local/bin/kubectl wait \
      --namespace=ingress-nginx \
      --selector app=ingress-nginx \
      --for=condition=Ready pods \
      --timeout=600s
  register: ingress_controller_ready
